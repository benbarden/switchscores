<script src="/js/chartjs/Chart.min.js?v=2.8.0"></script>
<style>
    canvas {
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
    }
</style>

<h2>Score distribution</h2>

<div style="width: 100%;">
    <canvas id="reviews-chart" height="200"></canvas>
</div>
<script>

    var ctx = document.getElementById('reviews-chart').getContext('2d');
    var scatterChart = new Chart(ctx, {
        type: 'scatter',
        data: {
            labels: [
                {% for item in GameReviews %}
                '{{ item.site.name }}'
                {% if not loop.last %}, {% endif %}
                {% endfor %}
            ],
            datasets: [{
                label: 'Ratings',
                borderColor: 'rgba(255, 99, 132, 1)',
                backgroundColor: 'rgba(255, 99, 132, 1)',
                data: [
                    {% for item in GameReviews %}
                    {
                        x: {{ loop.index }},
                        y: {{ item.rating_normalised }}
                    }
                    {% if not loop.last %}, {% endif %}
                    {% endfor %}
                ]
            }, {
                label: 'Average',
                borderColor: 'rgba(99, 132, 255, 1)',
                backgroundColor: 'rgba(99, 132, 255, 1)',
                data: [
                    {% set loopAverageIndex = GameReviews.count / 2 %}
                    {% if loopAverageIndex % 2 == 0 %}
                    {% set loopAverageIndex = loopAverageIndex + 0.5 %}
                    {% endif %}
                    {
                        x: {{ loopAverageIndex }},
                        y: {{ GameData.rating_avg }}
                    }
                ]
            }]
        },
        options: {
            scales: {
                xAxes: [{
                    display: false,
                    type: 'linear',
                    position: 'bottom'
                }],
                yAxes: [{
                    ticks: {
                        suggestedMin: 1,
                        suggestedMax: 10
                    }
                }]
            },
            tooltips: {
                callbacks: {
                    label: function(tooltipItem, data) {
                        var label = data.labels[tooltipItem.index];
                        if (tooltipItem.datasetIndex == 0) {
                            return label + ': ' + tooltipItem.yLabel + '/10';
                        } else {
                            return tooltipItem.yLabel + '/10';
                        }
                    }
                }
            },
            layout: {
                padding: {
                    left: 5,
                    right: 5,
                    top: 5,
                    bottom: 5
                }
            }
        }
    });

</script>
