{% extends 'theme/member-b5/layout-default.twig' %}

{% block page_inner %}

    <div class="container" x-data="collectionQuickAdd()">

        {#
        <h1 class="text-xl font-bold mb-4">Quick add to collection</h1>
        #}

        <p>
            Results are limited to 20 items. Try using a precise search term if you don't find what you need.
        </p>

        <div class="row">
            <div class="col-2 mb-3">
                <input type="text" x-model="query" @input.debounce.500ms="searchGames"
                       placeholder="Search for a game..." class="w-full border p-2 mb-4" />
            </div>

            <!-- Sort Order -->
            <div class="col-3 mb-4">
                <label class="font-semibold block mb-1">Sort by:</label>
                <label class="inline-flex items-center mr-4">
                    <input type="radio" name="sortBy" value="title" x-model="sortBy" @change="searchGames" class="mr-1">
                    Title (A-Z)
                </label>
                <label class="inline-flex items-center">
                    <input type="radio" name="sortBy" value="newest" x-model="sortBy" @change="searchGames" class="mr-1">
                    Newest
                </label>
            </div>

            <!-- Include Low Quality -->
            <div class="col-2 mb-4">
                <label class="inline-flex items-center">
                    <input type="checkbox" x-model="includeLowQuality" @change="searchGames" class="mr-1">
                    Include low quality titles
                </label>
            </div>

            <!-- Include De-listed -->
            <div class="col-2 mb-4">
                <label class="inline-flex items-center">
                    <input type="checkbox" x-model="includeDeListed" @change="searchGames" class="mr-1">
                    Include de-listed titles
                </label>
            </div>
            {#
            <div class="col-4 mb-3">
                <div x-data="{sortBy: 'title'}" x-init="$watch('sortBy', value => console.log(sortBy))">
                    Sort by:
                    <input type="radio" id="sortByTitle" value="title" x-model="sortBy" checked="checked" />
                    <label for="sortByTitle">title (A-Z)</label>
                    <input type="radio" id="sortByNewest" value="newest" x-model="sortBy" />
                    <label for="sortByNewest">newest</label>
                </div>
            </div>
            #}
        </div>

        <template x-if="loading">
            <p>Searching...</p>
        </template>
        <template x-if="emptyResult">
            <p>No results. Try searching for something else.</p>
        </template>

        <template x-for="game in results" :key="game.id">
            <div class="border p-4 mb-2">
                <div class="flex items-center justify-between">
                    <div class="row">
                        <div class="col-2 mb-3">
                            <img :src="game.squareImageUrl" style="width: 100%;">
                        </div>
                        <div class="col-5 mb-3">
                            <template x-if="game.consoleName == 'Switch 1'">
                                <label class="badge bg-info" x-text="game.consoleName"></label>
                            </template>
                            <template x-if="game.consoleName == 'Switch 2'">
                                <label class="badge bg-success" x-text="game.consoleName"></label>
                            </template>
                            <h2 x-text="game.title"></h2>
                            <p>Release date: <span x-text="game.eu_release_date"></span></p>
                            <template x-if="game.isLowQuality == 1">
                                <label class="badge bg-danger h7">Low quality</label>
                            </template>
                            <template x-if="game.isDeListed == 1">
                                <label class="badge bg-info h7">De-listed</label>
                            </template>
                        </div>
                        <div class="col-3 mb-3" x-show="!game.inCollection">
                            <select x-model="game.selectedStatus" class="form-select">
                                <option value="not-started">Not started</option>
                                <option value="now-playing">Now playing</option>
                                <option value="paused">Paused - will return</option>
                                <option value="abandoned">Abandoned</option>
                                <option value="completed">Completed</option>
                                <option value="replaying">Replaying</option>
                                <option value="endless">Endless</option>
                            </select>
                        </div>
                        <div class="col-2 mb-3" x-show="!game.inCollection">
                            <button
                                    @click="addToCollection(game)"
                                    class="btn btn-primary mb-3"
                            >
                                Add
                            </button>
                        </div>
                        <template x-if="game.inCollection">
                            <div class="col-3 mb-3">
                                <p class="text-green-600 mt-2">In your collection</p>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </template>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script>
        function collectionQuickAdd() {
            return {
                query: '',
                results: [],
                loading: false,
                emptyResult: false,
                sortBy: 'newest',
                includeLowQuality: false,
                includeDeListed: false,
                searchGames() {
                    if (!this.query || this.query.length < 2) return;
                    this.emptyResult = false;
                    this.loading = true;
                    //this.sortBy = $store.sortBy;
                    fetch(`/api/v2/user/collection/findGamesForAdding?q=${encodeURIComponent(this.query)}&sortBy=${this.sortBy}&includeLowQuality=${this.includeLowQuality ? 1 : 0}&includeDeListed=${this.includeDeListed ? 1 : 0}`)
                        .then(res => res.json())
                        .then(data => {
                            this.results = data.games.map(game => ({
                                ...game,
                                selectedStatus: 'not_started',
                                added: game.inCollection
                            }));
                            if (this.results.length < 1) {
                                this.emptyResult = true;
                            }
                        })
                        this.loading = false;
                },
                addToCollection(game) {
                    fetch('/user/collection/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                        },
                        body: JSON.stringify({
                            game_id: game.id,
                            play_status: game.selectedStatus
                        })
                    })
                        .then(res => {
                            if (res.ok) {
                                game.added = true;
                                game.inCollection = true;
                            }
                        });
                }
            }
        }
    </script>

{% endblock page_inner %}
